{"version":3,"file":"js/main.faa2d00b.js","mappings":"4XAcA,EAV0B,WAOxB,OANAA,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,IAAU,UAAUC,MAAK,SAACC,GACxBC,QAAQC,IAAI,UAAWF,EACzB,GACF,GAAG,IAEIG,EAAAA,cAAA,WAAK,UACd,E,SCTMC,EAAS,WACb,IAAAC,GAAsBC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1BI,EAAGF,EAAA,GAAEG,EAAMH,EAAA,GAElB,OACEJ,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,WAAK,SACLA,EAAAA,cAAA,WAAMM,GACNN,EAAAA,cAAA,UACEQ,QAAS,WACPD,GAAO,SAACE,GAAK,OAAKA,EAAQ,CAAC,GAC7B,GACD,aAKP,EAWA,EATkB,WAChB,OACET,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,WAAK,SACLA,EAAAA,cAACC,EAAM,MAGb,EC3BA,G,QAAmC,wBAAnC,EAAgE,uBC0BhE,EArBe,WACb,OACED,EAAAA,cAAA,OAAKU,UAAWC,GACdX,EAAAA,cAAA,WACGY,EAAWC,KAAI,SAACC,GAAG,OAClBd,EAAAA,cAAA,OACEU,UAAWC,EACXI,IAAKD,GAELd,EAAAA,cAACgB,EAAAA,GAAI,CAACC,GAAIH,GAAMA,GACZ,KAIVd,EAAAA,cAAA,WAEAA,EAAAA,cAACkB,EAAAA,GAAM,MAGb,ECvBaC,EAAsB,SAACC,GAGlC,OACEpB,EAAAA,cAACA,EAAAA,SAAc,CAACqB,SAAUrB,EAAAA,cAAA,WAAK,YAE7BA,EAAAA,cAACoB,EAAME,aAAY,MAGzB,ECuBMC,EAAwB,CAC5B,CACEC,KAAM,IACNC,QAASzB,EAAAA,cAAC0B,EAAM,MAChBC,SAAU,CACR,CACEC,OAAO,EACPH,QAASzB,EAAAA,cAAA,WAAK,gBAEhB,CACEwB,KAAM,UACNC,QAASzB,EAAAA,cAACC,EAAM,OAElB,CACEuB,KAAM,WACNC,QAASzB,EAAAA,cAAC6B,EAAO,OAQnB,CACEL,KAAM,UACNC,QACEzB,EAAAA,cAACmB,EAAmB,CAClBG,aAActB,EAAAA,MAAW,kBAAM,6BAAmC,UAQxEY,EA7De,SAACW,GACpB,IAAMO,EAAS,GAGTC,EAAwB,SAAxBA,EAAyBC,GAA+B,IAApBC,EAAUC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAC/CG,EAAI,GAWV,OAVKL,EAAUL,UAAaK,EAAUL,SAASQ,OAK7CH,EAAUL,SAASW,SAAQ,SAACxB,GAC1BuB,EAAEE,KAAIC,MAANH,GAACI,EAAAA,EAAAA,GAASV,EAAsBjB,EAAKkB,EAAUR,OACjD,IALAa,EAAEE,KAAKP,EAAUR,MAAQS,GAQpBI,CACT,EAMA,OAJAd,EAAOe,SAAQ,SAACxB,GACdgB,EAAOS,KAAIC,MAAXV,GAAMW,EAAAA,EAAAA,GAASV,EAAsBjB,IACvC,IAEOgB,CACT,CAqCmBY,CAAanB,GCpDhC,EAZY,WASV,OAPgBoB,QAAQC,UAChBhD,MAAK,WACX,IAAMiD,EAAM,IAAIC,IAAI,CAAC,MAAO,MAAO,MAAO,QAC1ChD,QAAQC,IAAI,SAAUgD,MAAMC,KAAKH,GACnC,KAEgBI,EAAAA,EAAAA,IAAU1B,EAE5B,ECRA2B,EAAAA,WAAoBC,SAASC,eAAe,SAASC,OACnDrD,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACsD,EAAAA,GAAa,KACZtD,EAAAA,cAACuD,EAAG,Q","sources":["webpack://2_webpack_js/./src/pages/Request.tsx","webpack://2_webpack_js/./src/pages/Button.tsx","webpack://2_webpack_js/./src/layouts/Layout.module.less?a14b","webpack://2_webpack_js/./src/layouts/Layout.tsx","webpack://2_webpack_js/./src/layouts/LazyImportComponent.tsx","webpack://2_webpack_js/./src/layouts/routes.tsx","webpack://2_webpack_js/./src/App.tsx","webpack://2_webpack_js/./src/main.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useEffect } from 'react';\nimport axios from 'axios';\n\nconst Request: React.FC = () => {\n  useEffect(() => {\n    axios.get('/getip').then((res) => {\n      console.log('res11: ', res);\n    });\n  }, []);\n\n  return <div>Request</div>;\n};\n\nexport default Request;\n","import * as React from 'react';\nimport { useState } from 'react';\n\nconst Button = () => {\n  const [num, setNum] = useState(0);\n\n  return (\n    <>\n      <div>here1</div>\n      <div>{num}</div>\n      <button\n        onClick={() => {\n          setNum((value) => value + 1);\n        }}\n      >\n        click me!\n      </button>\n    </>\n  );\n};\n\nconst Component = () => {\n  return (\n    <>\n      <div>Page1</div>\n      <Button></Button>\n    </>\n  );\n};\n\nexport default Component;\n","// extracted by mini-css-extract-plugin\nexport default {\"layout-container\":\"n5yNGq6_nupQtAXRgc8Z\",\"btn\":\"l0C5YYWoRDL1kcVt5Nby\"};","import * as React from 'react';\nimport { Outlet, Link } from 'react-router-dom';\nimport styles from './Layout.module.less';\nimport { routesList } from './routes';\n\n// 布局组件\nconst Layout = () => {\n  return (\n    <div className={styles['layout-container']}>\n      <nav>\n        {routesList.map((ele) => (\n          <div\n            className={styles['btn']}\n            key={ele}\n          >\n            <Link to={ele}>{ele}</Link>\n          </div>\n        ))}\n      </nav>\n\n      <hr />\n\n      <Outlet />\n    </div>\n  );\n};\n\nexport default Layout;\n","import React, { LazyExoticComponent } from 'react';\n\nexport const LazyImportComponent = (props: {\n  lazyChildren: LazyExoticComponent<() => React.FC>;\n}) => {\n  return (\n    <React.Suspense fallback={<div>loading</div>}>\n      {/* 居然还有这种写法，真的神奇 */}\n      <props.lazyChildren />\n    </React.Suspense>\n  );\n};\n","import * as React from 'react';\nimport type { RouteObject } from 'react-router-dom';\nimport Request from '../pages/Request';\nimport Button from '../pages/Button';\nimport Layout from './Layout';\nimport { LazyImportComponent } from './LazyImportComponent';\n\n// 解析 RouteObject 对象，获取需要显示的路由信息\nconst parserRoutes = (routes: RouteObject[]) => {\n  const result = [];\n\n  // 使用深度优先遍历去遍历路由\n  const routerObjectParserDFS = (routerObj, parentPath = '') => {\n    const r = [];\n    if (!routerObj.children || !routerObj.children.length) {\n      // 这里需要兼容 index=true 的情况，不过我们可以使用 routerObj.path || parentPath 直接添加\n      r.push(routerObj.path || parentPath);\n    } else {\n      // 如果存在 children 属性的话，则需要走递归逻辑\n      routerObj.children.forEach((ele) => {\n        r.push(...routerObjectParserDFS(ele, routerObj.path));\n      });\n    }\n\n    return r;\n  };\n\n  routes.forEach((ele) => {\n    result.push(...routerObjectParserDFS(ele));\n  });\n\n  return result;\n};\n\nconst routes: RouteObject[] = [\n  {\n    path: '/',\n    element: <Layout />,\n    children: [\n      {\n        index: true,\n        element: <div>hello wrold</div>,\n      },\n      {\n        path: '/button',\n        element: <Button></Button>,\n      },\n      {\n        path: '/request',\n        element: <Request></Request>,\n        // element: (\n        //   // 我们使用这种方案来进行路由的懒加载\n        //   <LazyImportComponent\n        //     lazyChildren={React.lazy(() => import('../pages/Request'))}\n        //   />\n        // ),\n      },\n      {\n        path: '/images',\n        element: (\n          <LazyImportComponent\n            lazyChildren={React.lazy(() => import('../pages/ImagesPage/index'))}\n          />\n        ),\n      },\n    ],\n  },\n];\n\nconst routesList = parserRoutes(routes);\n\nexport { routes, routesList };\n","// import 'core-js/es/promise';\nimport { useRoutes } from 'react-router-dom';\nimport { routes } from './layouts/routes';\n\n// 路由组件\nconst App = () => {\n  // 添加promise代码\n  const promise = Promise.resolve();\n  promise.then(() => {\n    const set = new Set(['foo', 'bar', 'baz', 'foo']);\n    console.log('====> ', Array.from(set));\n  });\n\n  const element = useRoutes(routes);\n  return element;\n};\n\nexport default App;\n","import * as React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport './main.less';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </>\n);\n"],"names":["useEffect","axios","then","res","console","log","React","Button","_useState","useState","_useState2","_slicedToArray","num","setNum","onClick","value","className","styles","routesList","map","ele","key","Link","to","Outlet","LazyImportComponent","props","fallback","lazyChildren","routes","path","element","Layout","children","index","Request","result","routerObjectParserDFS","routerObj","parentPath","arguments","length","undefined","r","forEach","push","apply","_toConsumableArray","parserRoutes","Promise","resolve","set","Set","Array","from","useRoutes","ReactDOM","document","getElementById","render","BrowserRouter","App"],"sourceRoot":""}